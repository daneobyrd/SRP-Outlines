// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
// -----------------------------------------------------------------------------------------------------------------------------------------------------
struct shader_data
{
    float3 position;
    Texture2D<float> green_ch;
    
};
Texture2D<float4> buffer_input;
RWTexture2D<float4> color_result;
float per_object_float;
float4 currentPixel;
float4 rightPixel;
// -----------------------------------------------------------------------------------------------------------------------------------------------------

float rand(float2 co)
{
    return (frac(sin(dot(co.xy, float2(12.9898, 78.233))) * 43758.5453)) * 1;
}

[numthreads(8,8,1)]
void CSMain(uint3 id : SV_DispatchThreadID)
{
    per_object_float = rand(id.xy);
    
    float4 color = float4(0, 0, 0, 0);
    color.r = per_object_float;
    color.g = 0;
    float4 current_pixel = buffer_input[id.xy];
    float4 right_pixel = buffer_input[id.xy + int2(1, 0)];

    color_result[id.xy] = float4(id.x & id.y, (id.x & 15) / 15.0, (id.y & 15) / 15.0, 0.0);
}
