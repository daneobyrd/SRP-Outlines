// A whole bunch of ways to get the camera texture for use as a base texture to "paste" my outline texture on top.
// ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
    // When either input int, RenderTargetIdentifier or RenderTargetHandle.id = -1 returns BuiltinRenderTextureType.CameraTarget;
    // -----------------------------------------------------------------------------------------------------------------------------------------------------
        // cmd.SetGlobalTexture(_combinedIntId, -1);
        // Blit(cmd, -1, _combinedIntId, _material, blitIndex);
        // Blit(cmd, BuiltinRenderTextureType.CameraTarget, _combinedIntId, _material, blitIndex);
        //
        // RenderTargetHandle _exampleDestinationHandle = RenderTargetHandle.CameraTarget;
        // Blit(cmd, _exampleDestinationHandle.Identifier(), _combinedIntId, _material, blitIndex);
        // Blit(cmd, _exampleDestinationHandle.id, _combinedIntId, _material, blitIndex);
        //
        // Blit(cmd, renderingData.cameraData.targetTexture, _combinedIntId, _material, blitIndex);
        // Blit(cmd, renderingData.cameraData.camera.activeTexture, _combinedIntId, _material, blitIndex);
        // Blit(cmd, renderingData.cameraData.renderer.cameraColorTarget, _combinedIntId, _material, blitIndex);
    // -----------------------------------------------------------------------------------------------------------------------------------------------------
    // Pass in a new ScriptableRenderer from the RenderFeature in Init(): _renderer => newRenderer;
    // -----------------------------------------------------------------------------------------------------------------------------------------------------
        // Blit(cmd, _renderer.cameraColorTarget, _combinedIntId, _material, blitIndex);
        // _renderer.ConfigureCameraTarget(colorTarget: , depthTarget: ); ???
    // -----------------------------------------------------------------------------------------------------------------------------------------------------
    // Manually recreate actions of blit function.
    // This ↓ would blit the data to the screen (the data being whatever combinedTargetHandle.Identifier() points to).
    // -----------------------------------------------------------------------------------------------------------------------------------------------------
        // Camera camera = renderingData.cameraData.camera;
        // cmd.SetGlobalTexture("_MainTex", combinedTargetHandle.Identifier());
        // cmd.SetViewProjectionMatrices(Matrix4x4.identity, Matrix4x4.identity);
        // cmd.DrawMesh(RenderingUtils.fullscreenMesh, Matrix4x4.identity, _material);
        // cmd.SetViewProjectionMatrices(camera.worldToCameraMatrix, camera.projectionMatrix);
// ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
